{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","pageNumbers","Array","from","length","_","i","className","cn","disabled","href","onClick","e","preventDefault","prevClick","map","page","active","nextClick","items","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","firstItem","lastItem","min","useEffect","id","value","onChange","Number","target","htmlFor","action","prev","item","index","start","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.183a0ec9.chunk.js","sourcesContent":["import type { MouseEvent, FC } from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (action: number | string) => void;\n};\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = Math.ceil(total / perPage);\n  const pageNumbers = Array.from({ length: pages }, (_, i) => i + 1);\n\n  const nextClick = (e: MouseEvent) => {\n    e.preventDefault();\n\n    if (currentPage === pages) {\n      return;\n    }\n\n    onPageChange('next');\n  };\n\n  const prevClick = (e: MouseEvent) => {\n    e.preventDefault();\n    if (currentPage === 1) {\n      return;\n    }\n\n    onPageChange('prev');\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={e => prevClick(e)}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map((page) => (\n        <li\n          className={cn('page-item', {\n            active: page === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={(e) => {\n              e.preventDefault();\n              onPageChange(page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={cn('page-item', {\n        disabled: currentPage === pages,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pages}\n          onClick={e => nextClick(e)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import type { FC } from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const pageChange = (action: number | string) => {\n    switch (action) {\n      case 'next':\n        setCurrentPage((prev) => prev + 1);\n        break;\n      case 'prev':\n        setCurrentPage((prev) => prev - 1);\n        break;\n      default:\n        setCurrentPage(Number(action));\n    }\n  };\n\n  const firstItem = (currentPage - 1) * perPage + 1;\n  const lastItem = Math.min(currentPage * perPage, items.length);\n\n  useEffect(() => {\n    if (currentPage > Math.ceil(items.length / perPage)) {\n      setCurrentPage(1);\n    }\n  }, [perPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => setPerPage(Number(e.target.value))}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={Number(perPage)}\n        currentPage={currentPage}\n        onPageChange={pageChange}\n      />\n\n      <ul>\n        {items.map((item, index) => {\n          const start = (currentPage - 1) * perPage;\n          const end = start + perPage;\n\n          if (index >= start && index < end) {\n            return <li data-cy=\"item\" key={item}>{item}</li>;\n          }\n\n          return null;\n        })}\n\n      </ul>\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}