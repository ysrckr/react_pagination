{"version":3,"sources":["components/StepButton/StepButton.tsx","components/PageNumber/PageNumber.tsx","components/Pagination/Pagination.tsx","components/Item/Item.tsx","components/ItemList/ItemList.tsx","components/Selector/Selector.tsx","components/Info/Info.tsx","App.tsx","utils.ts","index.tsx"],"names":["StepButton","direction","page","totalPage","handleClick","className","cn","disabled","href","onClick","e","PageNumber","currentPage","onPageChange","active","preventDefault","Pagination","pages","pageNumbers","Array","from","length","_","i","map","Item","item","ItemList","items","perPage","index","start","Selector","setPerPage","id","value","onChange","Number","target","htmlFor","Info","firstItem","lastItem","to","numbers","n","push","getNumbers","App","useState","setCurrentPage","pageCount","Math","ceil","min","useEffect","action","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.039e20ea.chunk.js","sourcesContent":["import type { FC, MouseEvent } from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  direction: 'next' | 'prev';\n  page: number;\n  totalPage: number;\n  handleClick: (e: MouseEvent) => void;\n};\n\nexport const StepButton: FC<Props> = ({\n  direction,\n  page,\n  totalPage,\n  handleClick,\n}) => {\n  if (direction === 'prev') {\n    return (\n      <li\n        className={cn('page-item', {\n          disabled: page === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={page === 1}\n          onClick={(e) => handleClick(e)}\n        >\n          «\n        </a>\n      </li>\n    );\n  }\n\n  return (\n    <li\n      className={cn('page-item', {\n        disabled: page === totalPage,\n      })}\n    >\n      <a\n        data-cy=\"nextLink\"\n        className=\"page-link\"\n        href=\"#next\"\n        aria-disabled={page === totalPage}\n        onClick={(e) => handleClick(e)}\n      >\n        »\n      </a>\n    </li>\n  );\n};\n","import type { FC } from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  page: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const PageNumber: FC<Props> = ({\n  page,\n  currentPage,\n  onPageChange,\n}) => (\n  <li\n    className={cn('page-item', {\n      active: page === currentPage,\n    })}\n  >\n    <a\n      data-cy=\"pageLink\"\n      className=\"page-link\"\n      href={`#${page}`}\n      onClick={(e) => {\n        e.preventDefault();\n        onPageChange(page);\n      }}\n    >\n      {page}\n    </a>\n  </li>\n);\n","import type { MouseEvent, FC } from 'react';\nimport { StepButton } from '../StepButton';\nimport { PageNumber } from '../PageNumber';\n\ntype Props = {\n  currentPage: number;\n  pages: number;\n  onPageChange: (action: number | string) => void;\n};\n\nexport const Pagination: FC<Props> = ({ currentPage, onPageChange, pages }) => {\n  const pageNumbers = Array.from({ length: pages }, (_, i) => i + 1);\n\n  const nextClick = (e: MouseEvent) => {\n    e.preventDefault();\n\n    if (currentPage === pages) {\n      return;\n    }\n\n    onPageChange('next');\n  };\n\n  const prevClick = (e: MouseEvent) => {\n    e.preventDefault();\n    if (currentPage === 1) {\n      return;\n    }\n\n    onPageChange('prev');\n  };\n\n  return (\n    <ul className=\"pagination\">\n\n      <StepButton\n        direction=\"prev\"\n        page={currentPage}\n        totalPage={pages}\n        handleClick={prevClick}\n      />\n\n      {pageNumbers.map((page) => (\n        <PageNumber\n          key={page}\n          page={page}\n          currentPage={currentPage}\n          onPageChange={onPageChange}\n        />\n      ))}\n      <StepButton\n        direction=\"next\"\n        page={currentPage}\n        totalPage={pages}\n        handleClick={nextClick}\n      />\n    </ul>\n  );\n};\n","import type { FC } from 'react';\n\ntype Props = {\n  item: string;\n};\n\nexport const Item: FC<Props> = ({ item }) => (\n  <li data-cy=\"item\">{item}</li>\n);\n","import type { FC } from 'react';\nimport { Item } from '../Item/Item';\n\ntype Props = {\n  items: string[];\n  currentPage: number;\n  perPage: number;\n};\n\nexport const ItemList: FC<Props> = ({\n  items,\n  currentPage,\n  perPage,\n}) => (\n  <ul>\n    {items.map((item, index) => {\n      const start = (currentPage - 1) * perPage;\n      const end = start + perPage;\n\n      if (index >= start && index < end) {\n        return <Item key={item} item={item} />;\n      }\n\n      return null;\n    })}\n\n  </ul>\n);\n","import type { FC } from 'react';\n\ntype Props = {\n  perPage: number;\n  setPerPage: (perPage: number) => void;\n};\n\nexport const Selector: FC<Props> = ({ perPage, setPerPage }) => (\n  <div className=\"form-group row\">\n    <div className=\"col-3 col-sm-2 col-xl-1\">\n      <select\n        data-cy=\"perPageSelector\"\n        id=\"perPageSelector\"\n        className=\"form-control\"\n        value={perPage}\n        onChange={(e) => setPerPage(Number(e.target.value))}\n      >\n        <option value=\"3\">3</option>\n        <option value=\"5\">5</option>\n        <option value=\"10\">10</option>\n        <option value=\"20\">20</option>\n      </select>\n    </div>\n\n    <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n      items per page\n    </label>\n  </div>\n);\n","import type { FC } from 'react';\n\ntype Props = {\n  currentPage: number;\n  firstItem: number;\n  lastItem: number;\n  length: number;\n};\n\nexport const Info: FC<Props> = ({\n  currentPage,\n  firstItem,\n  lastItem,\n  length,\n}) => (\n  <p className=\"lead\" data-cy=\"info\">\n    {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${length})`}\n  </p>\n);\n","import type { FC } from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { ItemList } from './components/ItemList';\nimport { Selector } from './components/Selector';\nimport { Info } from './components/Info';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const pageChange = (action: number | string) => {\n    switch (action) {\n      case 'next':\n        setCurrentPage((prev) => prev + 1);\n        break;\n      case 'prev':\n        setCurrentPage((prev) => prev - 1);\n        break;\n      default:\n        setCurrentPage(Number(action));\n    }\n  };\n\n  const pageCount = Math.ceil(items.length / perPage);\n\n  const firstItem = (currentPage - 1) * perPage + 1;\n  const lastItem = Math.min(currentPage * perPage, items.length);\n\n  useEffect(() => {\n    if (currentPage > pageCount) {\n      setCurrentPage(1);\n    }\n  }, [perPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <Info\n        currentPage={currentPage}\n        firstItem={firstItem}\n        lastItem={lastItem}\n        length={items.length}\n      />\n\n      <Selector perPage={perPage} setPerPage={setPerPage} />\n\n      <Pagination\n        currentPage={currentPage}\n        onPageChange={pageChange}\n        pages={pageCount}\n      />\n\n      <ItemList\n        items={items}\n        currentPage={currentPage}\n        perPage={perPage}\n      />\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}