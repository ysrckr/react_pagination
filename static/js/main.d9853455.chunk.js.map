{"version":3,"sources":["components/StepButton/StepButton.tsx","components/PageNumber/PageNumber.tsx","components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["StepButton","direction","page","totalPage","handleClick","className","cn","disabled","href","onClick","e","PageNumber","currentPage","onPageChange","active","preventDefault","Pagination","pages","pageNumbers","Array","from","length","_","i","map","items","to","numbers","n","push","getNumbers","App","useState","perPage","setPerPage","setCurrentPage","pageCount","Math","ceil","firstItem","lastItem","min","useEffect","id","value","onChange","Number","target","htmlFor","action","prev","item","index","start","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9853455.chunk.js","sourcesContent":["import type { FC, MouseEvent } from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  direction: 'next' | 'prev';\n  page: number;\n  totalPage: number;\n  handleClick: (e: MouseEvent) => void;\n};\n\nexport const StepButton: FC<Props> = ({\n  direction,\n  page,\n  totalPage,\n  handleClick,\n}) => {\n  if (direction === 'prev') {\n    return (\n      <li\n        className={cn('page-item', {\n          disabled: page === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={page === 1}\n          onClick={(e) => handleClick(e)}\n        >\n          «\n        </a>\n      </li>\n    );\n  }\n\n  return (\n    <li\n      className={cn('page-item', {\n        disabled: page === totalPage,\n      })}\n    >\n      <a\n        data-cy=\"nextLink\"\n        className=\"page-link\"\n        href=\"#next\"\n        aria-disabled={page === totalPage}\n        onClick={(e) => handleClick(e)}\n      >\n        »\n      </a>\n    </li>\n  );\n};\n","import type { FC } from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  page: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const PageNumber: FC<Props> = ({\n  page,\n  currentPage,\n  onPageChange,\n}) => (\n  <li\n    className={cn('page-item', {\n      active: page === currentPage,\n    })}\n  >\n    <a\n      data-cy=\"pageLink\"\n      className=\"page-link\"\n      href={`#${page}`}\n      onClick={(e) => {\n        e.preventDefault();\n        onPageChange(page);\n      }}\n    >\n      {page}\n    </a>\n  </li>\n);\n","import type { MouseEvent, FC } from 'react';\nimport { StepButton } from '../StepButton';\nimport { PageNumber } from '../PageNumber';\n\ntype Props = {\n  currentPage: number;\n  pages: number;\n  onPageChange: (action: number | string) => void;\n};\n\nexport const Pagination: FC<Props> = ({ currentPage, onPageChange, pages }) => {\n  const pageNumbers = Array.from({ length: pages }, (_, i) => i + 1);\n\n  const nextClick = (e: MouseEvent) => {\n    e.preventDefault();\n\n    if (currentPage === pages) {\n      return;\n    }\n\n    onPageChange('next');\n  };\n\n  const prevClick = (e: MouseEvent) => {\n    e.preventDefault();\n    if (currentPage === 1) {\n      return;\n    }\n\n    onPageChange('prev');\n  };\n\n  return (\n    <ul className=\"pagination\">\n\n      <StepButton\n        direction=\"prev\"\n        page={currentPage}\n        totalPage={pages}\n        handleClick={prevClick}\n      />\n\n      {pageNumbers.map((page) => (\n        <PageNumber\n          key={page}\n          page={page}\n          currentPage={currentPage}\n          onPageChange={onPageChange}\n        />\n      ))}\n      <StepButton\n        direction=\"next\"\n        page={currentPage}\n        totalPage={pages}\n        handleClick={nextClick}\n      />\n    </ul>\n  );\n};\n","import type { FC } from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const pageChange = (action: number | string) => {\n    switch (action) {\n      case 'next':\n        setCurrentPage((prev) => prev + 1);\n        break;\n      case 'prev':\n        setCurrentPage((prev) => prev - 1);\n        break;\n      default:\n        setCurrentPage(Number(action));\n    }\n  };\n\n  const pageCount = Math.ceil(items.length / perPage);\n\n  const firstItem = (currentPage - 1) * perPage + 1;\n  const lastItem = Math.min(currentPage * perPage, items.length);\n\n  useEffect(() => {\n    if (currentPage > pageCount) {\n      setCurrentPage(1);\n    }\n  }, [perPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => setPerPage(Number(e.target.value))}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        currentPage={currentPage}\n        onPageChange={pageChange}\n        pages={pageCount}\n      />\n\n      <ul>\n        {items.map((item, index) => {\n          const start = (currentPage - 1) * perPage;\n          const end = start + perPage;\n\n          if (index >= start && index < end) {\n            return <li data-cy=\"item\" key={item}>{item}</li>;\n          }\n\n          return null;\n        })}\n\n      </ul>\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}